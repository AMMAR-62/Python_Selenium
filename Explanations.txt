just grabbing with web pages.
we can make things with like bots.
it's quite useful.
it's easy to set up.
dragging and dropping, filling in the button, grabbing data, reading the entire page source code, etc.


========================tutorial 1========================
 - the webdriver is downloaded from the given website in the file
 - the webdriver is placed in the C:\Program Files (x86)
 - the PATH variable is declared in the file where we use selenium
 - we import the webdriver from selenium
 - if we want to open a web page and interact with the browser, we need to import the webdriver.
 - we open a website like driver.get(url)

========================tutorial 2========================
 - here we entered something in the search box and got the elements we wanted on that search page.
 - from selenium the import packages we use are support, common which are in webdriver
 - more details are given in the code.
 - the expected conditions module contains different conditions which can be checked if they exist
 - send_keys is the important method for every element where we can type some keys and from the keys module we can access some important keys.
 - we can find_element_by_... in any element we want and it returns the list of element that we want.
 - then we access the text in the element using element.text and if some exceptions come, we simply quit the driver

========================tutorial 3========================
 - here we do the back and forth of pages and we just move forward and backwards using links and clicking on links.
 - we first pick up the link using the find_element_by_link_text and then click on it using .click().
 - we also await for the changes to occur using WebDriverWait and expected_conditions module and By constant in the commons module.
 - we sleep in between while doing this so that the conditions are worth watching.
 - we also use the delay where it waits for the change for that maximum time to take place.
 - we use driver.forward() and driver.back() to navigate in the stack of pages. 

========================tutorial 4========================
action chains - allows us to do all the different actions.
a list of them is provided in the documentations of selenium.
action chains can be used to perform actions in a loop
intially we get the cookie element from the website and make a predefined click action on the element.
we also get the count of the cookie for checking if we can upgrade the item.
we also get the item element to click on it when the value is less than or equal to count.
we can perform different actions and make action chains.
we do some text manipulation for the numbers in the strings.
